#!/opt/perl/bin/perl

use 5.026;

use strict;
use warnings;
no  warnings 'syntax';

use           experimental 'signatures';
no  warnings 'experimental::signatures';


my $input = 265149;

my %values;

my $count = 0;

$values {0} {0} = 1;

sub fill ($x, $y) {
    foreach my $dx (-1 .. 1) {
        foreach my $dy (-1 .. 1) {
            next unless $dx || $dy;
            no warnings 'uninitialized';
            $values {$x} {$y} += $values {$x + $dx} {$y + $dy};
        }
    }
}

my $p = [1, 0];
fill @$p;

for (my $N = 1; ;$N += 2) {
    foreach my $d (([ 0,  1]) x  $N,
                   ([-1,  0]) x ($N + 1),
                   ([ 0, -1]) x ($N + 1),
                   ([ 1,  0]) x ($N + 2)) {
        $$p [0] += $$d [0];
        $$p [1] += $$d [1];
        fill @$p;
        if ($values {$$p [0]} {$$p [1]} > $input) {
            say $values {$$p [0]} {$$p [1]};
            exit;
        }
    }
}


__END__
